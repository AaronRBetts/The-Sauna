{"version":3,"sources":["weather.js"],"names":["api","key","WEATHER_API_KEY","base","getResults","searchbox","document","querySelector","addEventListener","setQuery","evt","keyCode","value","console","log","query","fetch","then","weather","json","displayResults","city","innerText","name","sys","country","now","Date","date","dateBuilder","temp","innerHTML","Math","round","main","weather_el","hilow","temp_min","temp_max","d","months","days","day","getDay","getDate","month","getMonth","year","getFullYear"],"mappings":"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","file":"weather.914625e0.js","sourceRoot":"..","sourcesContent":["const api = {\r\n  key: WEATHER_API_KEY,\r\n  base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n  \r\n  getResults(\"helsinki\");\r\n\r\n  const searchbox = document.querySelector('.weather-search-box');\r\n  searchbox.addEventListener('keypress', setQuery);\r\n  \r\n  function setQuery(evt) {\r\n    if (evt.keyCode == 13) {\r\n      getResults(searchbox.value);\r\n      console.log(searchbox.value);\r\n    }\r\n  }\r\n  \r\n  function getResults (query) {\r\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n      .then(weather => {\r\n        return weather.json();\r\n      }).then(displayResults);\r\n  }\r\n  \r\n  function displayResults (weather) {\r\n    let city = document.querySelector('.location .city');\r\n    city.innerText = `${weather.name}, ${weather.sys.country}`;\r\n  \r\n    let now = new Date();\r\n    let date = document.querySelector('.location .date');\r\n    date.innerText = dateBuilder(now);\r\n  \r\n    let temp = document.querySelector('.current .temp');\r\n    temp.innerHTML = `${Math.round(weather.main.temp)}<span>°c</span>`;\r\n  \r\n    let weather_el = document.querySelector('.current .weather');\r\n    weather_el.innerText = weather.weather[0].main;\r\n  \r\n    let hilow = document.querySelector('.hi-low');\r\n    hilow.innerText = `low of ${Math.round(weather.main.temp_min)}°c / high of ${Math.round(weather.main.temp_max)}°c`;\r\n  }\r\n  \r\n  function dateBuilder (d) {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  \r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n  \r\n    return `${day} ${date} ${month} ${year}`;\r\n  }"]}