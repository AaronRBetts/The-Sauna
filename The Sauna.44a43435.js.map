{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","searchReddit","results","output","forEach","post","domain","image","preview","url","images","source","a","Date","created_utc","year","getFullYear","month","getMonth","time","getDate","getHours","getMinutes","getSeconds","title","truncateText","selftext","innerHTML","showMessage","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","querySelector","remove","text","limit","shortened","indexOf","substring","addEventListener","e","preventDefault","value"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXA,OAAQ,SAASC,EAAYC,EAAaC,GAc/BC,OAZHH,EADAA,EAC8BA,iBAAAA,OAAAA,GAE9B,YAGAE,EADAA,EACkBA,SAAAA,OAAAA,GAElB,GAEAD,IACAA,EAAwBA,UAAAA,OAAAA,IAErBE,MACgCH,mCAAAA,OAAAA,GAAaE,OAAAA,GAASD,OAAAA,EADtD,oBAGNG,KAAK,SAAAC,GAAOA,OAAAA,EAAIC,SAChBF,KAAK,SAAAG,GAAQA,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAAAF,GAAQA,OAAAA,EAAKA,SACjDG,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,OApBnB,QAAA,QAAA;;ACwFd,aAxFD,IAAA,EAAA,EAAA,QAAA,gBAwFC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtFD,IAAMG,EAAaC,SAASC,eAAe,eACrCC,EAAcF,SAASC,eAAe,gBAoB5C,SAASE,EAAalB,EAAYC,EAAaC,GAGpCH,EAAAA,QAAAA,OAAOC,EAAYC,EAAaC,GAAQE,KAAK,SAAAe,GAC5CC,IAAAA,EAAS,6BACbD,EAAQE,QAAQ,SAAAC,GACO,gBAAfA,EAAKC,SAA0BD,EAAKC,OADpB,wBAGhBC,IAAAA,EAAJ,GACIF,EAAKG,UACLD,EAAoBF,YAAAA,OAAAA,EAAKI,IAAkCJ,gCAAAA,OAAAA,EAAKG,QAAQE,OAAO,GAAGC,OAAOF,IAAzF,8DAEAG,IAAAA,EAAI,IAAIC,KAAwB,IAAnBR,EAAKS,aAElBC,EAAOH,EAAEI,cACTC,EAFS,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAE7DL,EAAEM,YAKjBC,EAJOP,EAAEQ,UAIK,IAAMH,EAAQ,IAAMF,EAAO,IAHlCH,EAAES,WAG6C,IAFhDT,EAAEU,aAE0D,IAD5DV,EAAEW,aAIZpB,GAGUI,qHAAAA,OAAAA,EACwBF,kDAAAA,OAAAA,EAAKmB,MACeL,2EAAAA,OAAAA,EAEvBM,gFAAAA,OAAAA,EAAapB,EAAKqB,SAAU,KACxCrB,uCAAAA,OAAAA,EAAKI,IACsCJ,qIAAAA,OAAAA,EAAKC,OATnE,uEAcJH,GAAU,SACVL,SAASC,eAAe,WAAW4B,UAAYxB,IAKvD,SAASyB,EAAYC,EAASC,GAEpBC,IAAAA,EAAMjC,SAASkC,cAAc,OACnCD,EAAID,UAAqBA,SAAAA,OAAAA,GACzBC,EAAIE,YAAYnC,SAASoC,eAAeL,IAGlCM,IAAAA,EAAkBrC,SAASC,eAAe,oBAC1CjB,EAASgB,SAASC,eAAe,UAGvCoC,EAAgBC,aAAaL,EAAKjD,GAGlCuD,WAAW,WAAMvC,OAAAA,SAASwC,cAAc,UAAUC,UAAU,KAIhE,SAASd,EAAae,EAAMC,GAClBC,IAAAA,EAAYF,EAAKG,QAAQ,IAAKF,GAChCC,OAAc,GAAdA,EAAwBF,EACrBA,EAAKI,UAAU,EAAGF,GAlF7BzC,EAAa,GAAI,GAAI,WAErBJ,EAAWgD,iBAAiB,SAAU,SAAAC,GAClCA,EAAEC,iBAEiB/C,EAAYgD,MAEhBlD,SAASwC,cAAc,gCAAgCU,MAOtE/C,EAAa,GAAI,GAAI,IACrBD,EAAYgD,MAAQ","file":"The Sauna.44a43435.js","sourceRoot":"..","sourcesContent":["export default {\r\n    search: function(searchTerm, searchLimit, sortBy) {\r\n        if (searchTerm) {\r\n            searchTerm = `search.json?q=${searchTerm}`;   \r\n        } else {\r\n            searchTerm = `hot.json?`;\r\n        }\r\n        if (sortBy) {\r\n            sortBy = `&sort=${sortBy}`;\r\n        } else {\r\n            sortBy = ``;\r\n        }\r\n        if (searchLimit) {\r\n            searchLimit = `&limit=${searchLimit}`;      \r\n        }\r\n        return fetch(\r\n            `http://www.reddit.com/r/finland/${searchTerm}${sortBy}${searchLimit}&restrict_sr=on`\r\n        )\r\n        .then(res => res.json())\r\n        .then(data => data.data.children.map(data => data.data))\r\n        .catch(err => console.log(err));\r\n    }\r\n};","import reddit from \"./redditapi\";\r\n\r\nconst searchForm = document.getElementById(\"search-form\");\r\nconst searchInput = document.getElementById(\"search-input\");\r\n\r\nsearchReddit(\"\", 25, \"hottest\");\r\n\r\nsearchForm.addEventListener('submit', e => {\r\n    e.preventDefault();\r\n    //Get the search term\r\n    const searchTerm = searchInput.value;\r\n\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n\r\n    // if (searchTerm === \"\") {\r\n    //     showMessage('Please add a search term', 'alert-danger');\r\n    // }\r\n\r\n    //Clear input\r\n    searchReddit(\"\", 25, \"\");\r\n    searchInput.value = \"\";\r\n});\r\n\r\nfunction searchReddit(searchTerm, searchLimit, sortBy){\r\n\r\n    // Search Reddit\r\n    reddit.search(searchTerm, searchLimit, sortBy).then(results => {\r\n        let output = '<div class=\"card-columns\">';\r\n        results.forEach(post => {\r\n            if (post.domain == \"self.Finland\") post.domain = `reddit.com/r/finland`\r\n            //Check for image\r\n            let image = ``;\r\n            if (post.preview){\r\n                image = `<a href=\"${post.url}\" target=\"_blank\"><img src=\"${post.preview.images[0].source.url}\" class=\"card-img-top img-fluid\" alt=\"article image\"></a>`\r\n            } \r\n            var a = new Date(post.created_utc * 1000);\r\n            var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n            var year = a.getFullYear();\r\n            var month = months[a.getMonth()];\r\n            var date = a.getDate();\r\n            var hour = a.getHours();\r\n            var min = a.getMinutes();\r\n            var sec = a.getSeconds();\r\n            var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n\r\n            //Produce card with info\r\n            output += `\r\n            <div class=\"card text-white bg-dark\">\r\n                <div class=\"card-body\">\r\n                    ${image}\r\n                    <h5 class=\"card-header\">${post.title}</h5>\r\n                    <span class=\"badge badge-secondary\">Posted: ${time}</span>\r\n                    <hr>\r\n                    <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n                    <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read more</a>\r\n                    <span class=\"badge badge-secondary\">Article origin: ${post.domain}</span>\r\n                </div>\r\n            </div>\r\n            `;\r\n        })\r\n        output += '</div>';\r\n        document.getElementById('results').innerHTML = output;\r\n    });\r\n}\r\n    \r\n\r\nfunction showMessage(message, className){\r\n    //create message div\r\n    const div = document.createElement('div');\r\n    div.className = `alert ${className}`;\r\n    div.appendChild(document.createTextNode(message));\r\n\r\n    //get parent (search container)\r\n    const searchContainer = document.getElementById(\"search-container\");\r\n    const search = document.getElementById(\"search\");\r\n\r\n    //insert a message to the parent\r\n    searchContainer.insertBefore(div, search);\r\n\r\n    //Timeout alert\r\n    setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\r\n}\r\n\r\n//Truncate text\r\nfunction truncateText(text, limit) {\r\n    const shortened = text.indexOf(' ', limit);\r\n    if (shortened == -1) return text;\r\n    return text.substring(0, shortened);\r\n}"]}